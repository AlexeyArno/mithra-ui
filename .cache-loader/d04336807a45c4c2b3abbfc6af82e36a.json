{"remainingRequest":"D:\\Snnash\\client-frontend\\node_modules\\babel-loader\\lib\\index.js!D:\\Snnash\\client-frontend\\node_modules\\webpack\\hot\\only-dev-server.js","dependencies":[{"path":"D:\\Snnash\\client-frontend\\node_modules\\webpack\\hot\\only-dev-server.js","mtime":1526545551000},{"path":"D:\\Snnash\\client-frontend\\.babelrc","mtime":1528721307992},{"path":"D:\\Snnash\\client-frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":0},{"path":"D:\\Snnash\\client-frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":1520329890000}],"contextDependencies":[],"result":["\"use strict\";\n\n/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n/*globals __webpack_hash__ */\nif (module.hot) {\n\tvar lastHash;\n\tvar upToDate = function upToDate() {\n\t\treturn lastHash.indexOf(__webpack_hash__) >= 0;\n\t};\n\tvar log = require(\"./log\");\n\tvar check = function check() {\n\t\tmodule.hot.check().then(function (updatedModules) {\n\t\t\tif (!updatedModules) {\n\t\t\t\tlog(\"warning\", \"[HMR] Cannot find update. Need to do a full reload!\");\n\t\t\t\tlog(\"warning\", \"[HMR] (Probably because of restarting the webpack-dev-server)\");\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\treturn module.hot.apply({\n\t\t\t\tignoreUnaccepted: true,\n\t\t\t\tignoreDeclined: true,\n\t\t\t\tignoreErrored: true,\n\t\t\t\tonUnaccepted: function onUnaccepted(data) {\n\t\t\t\t\tlog(\"warning\", \"Ignored an update to unaccepted module \" + data.chain.join(\" -> \"));\n\t\t\t\t},\n\t\t\t\tonDeclined: function onDeclined(data) {\n\t\t\t\t\tlog(\"warning\", \"Ignored an update to declined module \" + data.chain.join(\" -> \"));\n\t\t\t\t},\n\t\t\t\tonErrored: function onErrored(data) {\n\t\t\t\t\tlog(\"error\", data.error);\n\t\t\t\t\tlog(\"warning\", \"Ignored an error while updating module \" + data.moduleId + \" (\" + data.type + \")\");\n\t\t\t\t}\n\t\t\t}).then(function (renewedModules) {\n\t\t\t\tif (!upToDate()) {\n\t\t\t\t\tcheck();\n\t\t\t\t}\n\n\t\t\t\trequire(\"./log-apply-result\")(updatedModules, renewedModules);\n\n\t\t\t\tif (upToDate()) {\n\t\t\t\t\tlog(\"info\", \"[HMR] App is up to date.\");\n\t\t\t\t}\n\t\t\t});\n\t\t}).catch(function (err) {\n\t\t\tvar status = module.hot.status();\n\t\t\tif ([\"abort\", \"fail\"].indexOf(status) >= 0) {\n\t\t\t\tlog(\"warning\", \"[HMR] Cannot check for update. Need to do a full reload!\");\n\t\t\t\tlog(\"warning\", \"[HMR] \" + err.stack || err.message);\n\t\t\t} else {\n\t\t\t\tlog(\"warning\", \"[HMR] Update check failed: \" + err.stack || err.message);\n\t\t\t}\n\t\t});\n\t};\n\tvar hotEmitter = require(\"./emitter\");\n\thotEmitter.on(\"webpackHotUpdate\", function (currentHash) {\n\t\tlastHash = currentHash;\n\t\tif (!upToDate()) {\n\t\t\tvar status = module.hot.status();\n\t\t\tif (status === \"idle\") {\n\t\t\t\tlog(\"info\", \"[HMR] Checking for updates on the server...\");\n\t\t\t\tcheck();\n\t\t\t} else if ([\"abort\", \"fail\"].indexOf(status) >= 0) {\n\t\t\t\tlog(\"warning\", \"[HMR] Cannot apply update as a previous update \" + status + \"ed. Need to do a full reload!\");\n\t\t\t}\n\t\t}\n\t});\n\tlog(\"info\", \"[HMR] Waiting for update signal from WDS...\");\n} else {\n\tthrow new Error(\"[HMR] Hot Module Replacement is disabled.\");\n}",{"version":3,"sources":["node_modules\\webpack\\hot\\only-dev-server.js"],"names":["module","hot","lastHash","upToDate","indexOf","__webpack_hash__","log","require","check","then","updatedModules","apply","ignoreUnaccepted","ignoreDeclined","ignoreErrored","onUnaccepted","data","chain","join","onDeclined","onErrored","error","moduleId","type","renewedModules","catch","err","status","stack","message","hotEmitter","on","currentHash","Error"],"mappings":";;AAAA;;;;AAIA;AACA,IAAIA,OAAOC,GAAX,EAAgB;AACf,KAAIC,QAAJ;AACA,KAAIC,WAAW,SAASA,QAAT,GAAoB;AAClC,SAAOD,SAASE,OAAT,CAAiBC,gBAAjB,KAAsC,CAA7C;AACA,EAFD;AAGA,KAAIC,MAAMC,QAAQ,OAAR,CAAV;AACA,KAAIC,QAAQ,SAASA,KAAT,GAAiB;AAC5BR,SAAOC,GAAP,CACEO,KADF,GAEEC,IAFF,CAEO,UAASC,cAAT,EAAyB;AAC9B,OAAI,CAACA,cAAL,EAAqB;AACpBJ,QAAI,SAAJ,EAAe,qDAAf;AACAA,QACC,SADD,EAEC,+DAFD;AAIA;AACA;;AAED,UAAON,OAAOC,GAAP,CACLU,KADK,CACC;AACNC,sBAAkB,IADZ;AAENC,oBAAgB,IAFV;AAGNC,mBAAe,IAHT;AAINC,kBAAc,sBAASC,IAAT,EAAe;AAC5BV,SACC,SADD,EAEC,4CACCU,KAAKC,KAAL,CAAWC,IAAX,CAAgB,MAAhB,CAHF;AAKA,KAVK;AAWNC,gBAAY,oBAASH,IAAT,EAAe;AAC1BV,SACC,SADD,EAEC,0CACCU,KAAKC,KAAL,CAAWC,IAAX,CAAgB,MAAhB,CAHF;AAKA,KAjBK;AAkBNE,eAAW,mBAASJ,IAAT,EAAe;AACzBV,SAAI,OAAJ,EAAaU,KAAKK,KAAlB;AACAf,SACC,SADD,EAEC,4CACCU,KAAKM,QADN,GAEC,IAFD,GAGCN,KAAKO,IAHN,GAIC,GANF;AAQA;AA5BK,IADD,EA+BLd,IA/BK,CA+BA,UAASe,cAAT,EAAyB;AAC9B,QAAI,CAACrB,UAAL,EAAiB;AAChBK;AACA;;AAEDD,YAAQ,oBAAR,EAA8BG,cAA9B,EAA8Cc,cAA9C;;AAEA,QAAIrB,UAAJ,EAAgB;AACfG,SAAI,MAAJ,EAAY,0BAAZ;AACA;AACD,IAzCK,CAAP;AA0CA,GAtDF,EAuDEmB,KAvDF,CAuDQ,UAASC,GAAT,EAAc;AACpB,OAAIC,SAAS3B,OAAOC,GAAP,CAAW0B,MAAX,EAAb;AACA,OAAI,CAAC,OAAD,EAAU,MAAV,EAAkBvB,OAAlB,CAA0BuB,MAA1B,KAAqC,CAAzC,EAA4C;AAC3CrB,QACC,SADD,EAEC,0DAFD;AAIAA,QAAI,SAAJ,EAAe,WAAWoB,IAAIE,KAAf,IAAwBF,IAAIG,OAA3C;AACA,IAND,MAMO;AACNvB,QACC,SADD,EAEC,gCAAgCoB,IAAIE,KAApC,IAA6CF,IAAIG,OAFlD;AAIA;AACD,GArEF;AAsEA,EAvED;AAwEA,KAAIC,aAAavB,QAAQ,WAAR,CAAjB;AACAuB,YAAWC,EAAX,CAAc,kBAAd,EAAkC,UAASC,WAAT,EAAsB;AACvD9B,aAAW8B,WAAX;AACA,MAAI,CAAC7B,UAAL,EAAiB;AAChB,OAAIwB,SAAS3B,OAAOC,GAAP,CAAW0B,MAAX,EAAb;AACA,OAAIA,WAAW,MAAf,EAAuB;AACtBrB,QAAI,MAAJ,EAAY,6CAAZ;AACAE;AACA,IAHD,MAGO,IAAI,CAAC,OAAD,EAAU,MAAV,EAAkBJ,OAAlB,CAA0BuB,MAA1B,KAAqC,CAAzC,EAA4C;AAClDrB,QACC,SADD,EAEC,oDACCqB,MADD,GAEC,+BAJF;AAMA;AACD;AACD,EAhBD;AAiBArB,KAAI,MAAJ,EAAY,6CAAZ;AACA,CAjGD,MAiGO;AACN,OAAM,IAAI2B,KAAJ,CAAU,2CAAV,CAAN;AACA","file":"only-dev-server.js","sourceRoot":"D:/Snnash/client-frontend","sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n/*globals __webpack_hash__ */\nif (module.hot) {\n\tvar lastHash;\n\tvar upToDate = function upToDate() {\n\t\treturn lastHash.indexOf(__webpack_hash__) >= 0;\n\t};\n\tvar log = require(\"./log\");\n\tvar check = function check() {\n\t\tmodule.hot\n\t\t\t.check()\n\t\t\t.then(function(updatedModules) {\n\t\t\t\tif (!updatedModules) {\n\t\t\t\t\tlog(\"warning\", \"[HMR] Cannot find update. Need to do a full reload!\");\n\t\t\t\t\tlog(\n\t\t\t\t\t\t\"warning\",\n\t\t\t\t\t\t\"[HMR] (Probably because of restarting the webpack-dev-server)\"\n\t\t\t\t\t);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\treturn module.hot\n\t\t\t\t\t.apply({\n\t\t\t\t\t\tignoreUnaccepted: true,\n\t\t\t\t\t\tignoreDeclined: true,\n\t\t\t\t\t\tignoreErrored: true,\n\t\t\t\t\t\tonUnaccepted: function(data) {\n\t\t\t\t\t\t\tlog(\n\t\t\t\t\t\t\t\t\"warning\",\n\t\t\t\t\t\t\t\t\"Ignored an update to unaccepted module \" +\n\t\t\t\t\t\t\t\t\tdata.chain.join(\" -> \")\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t},\n\t\t\t\t\t\tonDeclined: function(data) {\n\t\t\t\t\t\t\tlog(\n\t\t\t\t\t\t\t\t\"warning\",\n\t\t\t\t\t\t\t\t\"Ignored an update to declined module \" +\n\t\t\t\t\t\t\t\t\tdata.chain.join(\" -> \")\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t},\n\t\t\t\t\t\tonErrored: function(data) {\n\t\t\t\t\t\t\tlog(\"error\", data.error);\n\t\t\t\t\t\t\tlog(\n\t\t\t\t\t\t\t\t\"warning\",\n\t\t\t\t\t\t\t\t\"Ignored an error while updating module \" +\n\t\t\t\t\t\t\t\t\tdata.moduleId +\n\t\t\t\t\t\t\t\t\t\" (\" +\n\t\t\t\t\t\t\t\t\tdata.type +\n\t\t\t\t\t\t\t\t\t\")\"\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t\t.then(function(renewedModules) {\n\t\t\t\t\t\tif (!upToDate()) {\n\t\t\t\t\t\t\tcheck();\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\trequire(\"./log-apply-result\")(updatedModules, renewedModules);\n\n\t\t\t\t\t\tif (upToDate()) {\n\t\t\t\t\t\t\tlog(\"info\", \"[HMR] App is up to date.\");\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t})\n\t\t\t.catch(function(err) {\n\t\t\t\tvar status = module.hot.status();\n\t\t\t\tif ([\"abort\", \"fail\"].indexOf(status) >= 0) {\n\t\t\t\t\tlog(\n\t\t\t\t\t\t\"warning\",\n\t\t\t\t\t\t\"[HMR] Cannot check for update. Need to do a full reload!\"\n\t\t\t\t\t);\n\t\t\t\t\tlog(\"warning\", \"[HMR] \" + err.stack || err.message);\n\t\t\t\t} else {\n\t\t\t\t\tlog(\n\t\t\t\t\t\t\"warning\",\n\t\t\t\t\t\t\"[HMR] Update check failed: \" + err.stack || err.message\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t});\n\t};\n\tvar hotEmitter = require(\"./emitter\");\n\thotEmitter.on(\"webpackHotUpdate\", function(currentHash) {\n\t\tlastHash = currentHash;\n\t\tif (!upToDate()) {\n\t\t\tvar status = module.hot.status();\n\t\t\tif (status === \"idle\") {\n\t\t\t\tlog(\"info\", \"[HMR] Checking for updates on the server...\");\n\t\t\t\tcheck();\n\t\t\t} else if ([\"abort\", \"fail\"].indexOf(status) >= 0) {\n\t\t\t\tlog(\n\t\t\t\t\t\"warning\",\n\t\t\t\t\t\"[HMR] Cannot apply update as a previous update \" +\n\t\t\t\t\t\tstatus +\n\t\t\t\t\t\t\"ed. Need to do a full reload!\"\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t});\n\tlog(\"info\", \"[HMR] Waiting for update signal from WDS...\");\n} else {\n\tthrow new Error(\"[HMR] Hot Module Replacement is disabled.\");\n}\n"]}]}