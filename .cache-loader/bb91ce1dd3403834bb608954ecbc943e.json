{"remainingRequest":"D:\\Snnash\\client-frontend\\node_modules\\babel-loader\\lib\\index.js!D:\\Snnash\\client-frontend\\node_modules\\prop-types\\factoryWithThrowingShims.js","dependencies":[{"path":"D:\\Snnash\\client-frontend\\node_modules\\prop-types\\factoryWithThrowingShims.js","mtime":1519255688000},{"path":"D:\\Snnash\\client-frontend\\.babelrc","mtime":1528721307992},{"path":"D:\\Snnash\\client-frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":0},{"path":"D:\\Snnash\\client-frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":1520329890000}],"contextDependencies":[],"result":["/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar emptyFunction = require('fbjs/lib/emptyFunction');\nvar invariant = require('fbjs/lib/invariant');\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nmodule.exports = function () {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    invariant(false, 'Calling PropTypes validators directly is not supported by the `prop-types` package. ' + 'Use PropTypes.checkPropTypes() to call them. ' + 'Read more at http://fb.me/use-check-prop-types');\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim\n  };\n\n  ReactPropTypes.checkPropTypes = emptyFunction;\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};",{"version":3,"sources":["node_modules\\prop-types\\factoryWithThrowingShims.js"],"names":["emptyFunction","require","invariant","ReactPropTypesSecret","module","exports","shim","props","propName","componentName","location","propFullName","secret","isRequired","getShim","ReactPropTypes","array","bool","func","number","object","string","symbol","any","arrayOf","element","instanceOf","node","objectOf","oneOf","oneOfType","shape","exact","checkPropTypes","PropTypes"],"mappings":"AAAA;;;;;;;AAOA;;AAEA,IAAIA,gBAAgBC,QAAQ,wBAAR,CAApB;AACA,IAAIC,YAAYD,QAAQ,oBAAR,CAAhB;AACA,IAAIE,uBAAuBF,QAAQ,4BAAR,CAA3B;;AAEAG,OAAOC,OAAP,GAAiB,YAAW;AAC1B,WAASC,IAAT,CAAcC,KAAd,EAAqBC,QAArB,EAA+BC,aAA/B,EAA8CC,QAA9C,EAAwDC,YAAxD,EAAsEC,MAAtE,EAA8E;AAC5E,QAAIA,WAAWT,oBAAf,EAAqC;AACnC;AACA;AACD;AACDD,cACE,KADF,EAEE,yFACA,+CADA,GAEA,gDAJF;AAMD;AACDI,OAAKO,UAAL,GAAkBP,IAAlB;AACA,WAASQ,OAAT,GAAmB;AACjB,WAAOR,IAAP;AACD;AACD;AACA;AACA,MAAIS,iBAAiB;AACnBC,WAAOV,IADY;AAEnBW,UAAMX,IAFa;AAGnBY,UAAMZ,IAHa;AAInBa,YAAQb,IAJW;AAKnBc,YAAQd,IALW;AAMnBe,YAAQf,IANW;AAOnBgB,YAAQhB,IAPW;;AASnBiB,SAAKjB,IATc;AAUnBkB,aAASV,OAVU;AAWnBW,aAASnB,IAXU;AAYnBoB,gBAAYZ,OAZO;AAanBa,UAAMrB,IAba;AAcnBsB,cAAUd,OAdS;AAenBe,WAAOf,OAfY;AAgBnBgB,eAAWhB,OAhBQ;AAiBnBiB,WAAOjB,OAjBY;AAkBnBkB,WAAOlB;AAlBY,GAArB;;AAqBAC,iBAAekB,cAAf,GAAgCjC,aAAhC;AACAe,iBAAemB,SAAf,GAA2BnB,cAA3B;;AAEA,SAAOA,cAAP;AACD,CA5CD","file":"factoryWithThrowingShims.js","sourceRoot":"D:/Snnash/client-frontend","sourcesContent":["/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar emptyFunction = require('fbjs/lib/emptyFunction');\nvar invariant = require('fbjs/lib/invariant');\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    invariant(\n      false,\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim\n  };\n\n  ReactPropTypes.checkPropTypes = emptyFunction;\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n"]}]}