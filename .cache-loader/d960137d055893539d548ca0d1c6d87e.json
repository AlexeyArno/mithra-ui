{"remainingRequest":"D:\\Snnash\\client-frontend\\node_modules\\babel-loader\\lib\\index.js!D:\\Snnash\\client-frontend\\node_modules\\webpack\\hot\\dev-server.js","dependencies":[{"path":"D:\\Snnash\\client-frontend\\node_modules\\webpack\\hot\\dev-server.js","mtime":1526545551000},{"path":"D:\\Snnash\\client-frontend\\.babelrc","mtime":1528721307992},{"path":"D:\\Snnash\\client-frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":0},{"path":"D:\\Snnash\\client-frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":1520329890000}],"contextDependencies":[],"result":["\"use strict\";\n\n/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n/*globals window __webpack_hash__ */\nif (module.hot) {\n\tvar lastHash;\n\tvar upToDate = function upToDate() {\n\t\treturn lastHash.indexOf(__webpack_hash__) >= 0;\n\t};\n\tvar log = require(\"./log\");\n\tvar check = function check() {\n\t\tmodule.hot.check(true).then(function (updatedModules) {\n\t\t\tif (!updatedModules) {\n\t\t\t\tlog(\"warning\", \"[HMR] Cannot find update. Need to do a full reload!\");\n\t\t\t\tlog(\"warning\", \"[HMR] (Probably because of restarting the webpack-dev-server)\");\n\t\t\t\twindow.location.reload();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (!upToDate()) {\n\t\t\t\tcheck();\n\t\t\t}\n\n\t\t\trequire(\"./log-apply-result\")(updatedModules, updatedModules);\n\n\t\t\tif (upToDate()) {\n\t\t\t\tlog(\"info\", \"[HMR] App is up to date.\");\n\t\t\t}\n\t\t}).catch(function (err) {\n\t\t\tvar status = module.hot.status();\n\t\t\tif ([\"abort\", \"fail\"].indexOf(status) >= 0) {\n\t\t\t\tlog(\"warning\", \"[HMR] Cannot apply update. Need to do a full reload!\");\n\t\t\t\tlog(\"warning\", \"[HMR] \" + err.stack || err.message);\n\t\t\t\twindow.location.reload();\n\t\t\t} else {\n\t\t\t\tlog(\"warning\", \"[HMR] Update failed: \" + err.stack || err.message);\n\t\t\t}\n\t\t});\n\t};\n\tvar hotEmitter = require(\"./emitter\");\n\thotEmitter.on(\"webpackHotUpdate\", function (currentHash) {\n\t\tlastHash = currentHash;\n\t\tif (!upToDate() && module.hot.status() === \"idle\") {\n\t\t\tlog(\"info\", \"[HMR] Checking for updates on the server...\");\n\t\t\tcheck();\n\t\t}\n\t});\n\tlog(\"info\", \"[HMR] Waiting for update signal from WDS...\");\n} else {\n\tthrow new Error(\"[HMR] Hot Module Replacement is disabled.\");\n}",{"version":3,"sources":["node_modules\\webpack\\hot\\dev-server.js"],"names":["module","hot","lastHash","upToDate","indexOf","__webpack_hash__","log","require","check","then","updatedModules","window","location","reload","catch","err","status","stack","message","hotEmitter","on","currentHash","Error"],"mappings":";;AAAA;;;;AAIA;AACA,IAAIA,OAAOC,GAAX,EAAgB;AACf,KAAIC,QAAJ;AACA,KAAIC,WAAW,SAASA,QAAT,GAAoB;AAClC,SAAOD,SAASE,OAAT,CAAiBC,gBAAjB,KAAsC,CAA7C;AACA,EAFD;AAGA,KAAIC,MAAMC,QAAQ,OAAR,CAAV;AACA,KAAIC,QAAQ,SAASA,KAAT,GAAiB;AAC5BR,SAAOC,GAAP,CACEO,KADF,CACQ,IADR,EAEEC,IAFF,CAEO,UAASC,cAAT,EAAyB;AAC9B,OAAI,CAACA,cAAL,EAAqB;AACpBJ,QAAI,SAAJ,EAAe,qDAAf;AACAA,QACC,SADD,EAEC,+DAFD;AAIAK,WAAOC,QAAP,CAAgBC,MAAhB;AACA;AACA;;AAED,OAAI,CAACV,UAAL,EAAiB;AAChBK;AACA;;AAEDD,WAAQ,oBAAR,EAA8BG,cAA9B,EAA8CA,cAA9C;;AAEA,OAAIP,UAAJ,EAAgB;AACfG,QAAI,MAAJ,EAAY,0BAAZ;AACA;AACD,GAtBF,EAuBEQ,KAvBF,CAuBQ,UAASC,GAAT,EAAc;AACpB,OAAIC,SAAShB,OAAOC,GAAP,CAAWe,MAAX,EAAb;AACA,OAAI,CAAC,OAAD,EAAU,MAAV,EAAkBZ,OAAlB,CAA0BY,MAA1B,KAAqC,CAAzC,EAA4C;AAC3CV,QACC,SADD,EAEC,sDAFD;AAIAA,QAAI,SAAJ,EAAe,WAAWS,IAAIE,KAAf,IAAwBF,IAAIG,OAA3C;AACAP,WAAOC,QAAP,CAAgBC,MAAhB;AACA,IAPD,MAOO;AACNP,QAAI,SAAJ,EAAe,0BAA0BS,IAAIE,KAA9B,IAAuCF,IAAIG,OAA1D;AACA;AACD,GAnCF;AAoCA,EArCD;AAsCA,KAAIC,aAAaZ,QAAQ,WAAR,CAAjB;AACAY,YAAWC,EAAX,CAAc,kBAAd,EAAkC,UAASC,WAAT,EAAsB;AACvDnB,aAAWmB,WAAX;AACA,MAAI,CAAClB,UAAD,IAAeH,OAAOC,GAAP,CAAWe,MAAX,OAAwB,MAA3C,EAAmD;AAClDV,OAAI,MAAJ,EAAY,6CAAZ;AACAE;AACA;AACD,EAND;AAOAF,KAAI,MAAJ,EAAY,6CAAZ;AACA,CArDD,MAqDO;AACN,OAAM,IAAIgB,KAAJ,CAAU,2CAAV,CAAN;AACA","file":"dev-server.js","sourceRoot":"D:/Snnash/client-frontend","sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n/*globals window __webpack_hash__ */\nif (module.hot) {\n\tvar lastHash;\n\tvar upToDate = function upToDate() {\n\t\treturn lastHash.indexOf(__webpack_hash__) >= 0;\n\t};\n\tvar log = require(\"./log\");\n\tvar check = function check() {\n\t\tmodule.hot\n\t\t\t.check(true)\n\t\t\t.then(function(updatedModules) {\n\t\t\t\tif (!updatedModules) {\n\t\t\t\t\tlog(\"warning\", \"[HMR] Cannot find update. Need to do a full reload!\");\n\t\t\t\t\tlog(\n\t\t\t\t\t\t\"warning\",\n\t\t\t\t\t\t\"[HMR] (Probably because of restarting the webpack-dev-server)\"\n\t\t\t\t\t);\n\t\t\t\t\twindow.location.reload();\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (!upToDate()) {\n\t\t\t\t\tcheck();\n\t\t\t\t}\n\n\t\t\t\trequire(\"./log-apply-result\")(updatedModules, updatedModules);\n\n\t\t\t\tif (upToDate()) {\n\t\t\t\t\tlog(\"info\", \"[HMR] App is up to date.\");\n\t\t\t\t}\n\t\t\t})\n\t\t\t.catch(function(err) {\n\t\t\t\tvar status = module.hot.status();\n\t\t\t\tif ([\"abort\", \"fail\"].indexOf(status) >= 0) {\n\t\t\t\t\tlog(\n\t\t\t\t\t\t\"warning\",\n\t\t\t\t\t\t\"[HMR] Cannot apply update. Need to do a full reload!\"\n\t\t\t\t\t);\n\t\t\t\t\tlog(\"warning\", \"[HMR] \" + err.stack || err.message);\n\t\t\t\t\twindow.location.reload();\n\t\t\t\t} else {\n\t\t\t\t\tlog(\"warning\", \"[HMR] Update failed: \" + err.stack || err.message);\n\t\t\t\t}\n\t\t\t});\n\t};\n\tvar hotEmitter = require(\"./emitter\");\n\thotEmitter.on(\"webpackHotUpdate\", function(currentHash) {\n\t\tlastHash = currentHash;\n\t\tif (!upToDate() && module.hot.status() === \"idle\") {\n\t\t\tlog(\"info\", \"[HMR] Checking for updates on the server...\");\n\t\t\tcheck();\n\t\t}\n\t});\n\tlog(\"info\", \"[HMR] Waiting for update signal from WDS...\");\n} else {\n\tthrow new Error(\"[HMR] Hot Module Replacement is disabled.\");\n}\n"]}]}