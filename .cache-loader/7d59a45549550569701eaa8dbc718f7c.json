{"remainingRequest":"D:\\Snnash\\client-frontend\\node_modules\\babel-loader\\lib\\index.js!D:\\Snnash\\client-frontend\\node_modules\\lodash-es\\_baseGetTag.js","dependencies":[{"path":"D:\\Snnash\\client-frontend\\node_modules\\lodash-es\\_baseGetTag.js","mtime":499162500000},{"path":"D:\\Snnash\\client-frontend\\.babelrc","mtime":1528721307992},{"path":"D:\\Snnash\\client-frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":0},{"path":"D:\\Snnash\\client-frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":1520329890000}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _Symbol2 = require('./_Symbol.js');\n\nvar _Symbol3 = _interopRequireDefault(_Symbol2);\n\nvar _getRawTag = require('./_getRawTag.js');\n\nvar _getRawTag2 = _interopRequireDefault(_getRawTag);\n\nvar _objectToString = require('./_objectToString.js');\n\nvar _objectToString2 = _interopRequireDefault(_objectToString);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/** `Object#toString` result references. */\nvar nullTag = '[object Null]',\n    undefinedTag = '[object Undefined]';\n\n/** Built-in value references. */\nvar symToStringTag = _Symbol3.default ? _Symbol3.default.toStringTag : undefined;\n\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n  return symToStringTag && symToStringTag in Object(value) ? (0, _getRawTag2.default)(value) : (0, _objectToString2.default)(value);\n}\n\nexports.default = baseGetTag;",{"version":3,"sources":["node_modules\\lodash-es\\_baseGetTag.js"],"names":["nullTag","undefinedTag","symToStringTag","Symbol","toStringTag","undefined","baseGetTag","value","Object"],"mappings":";;;;;;AAAA;;;;AACA;;;;AACA;;;;;;AAEA;AACA,IAAIA,UAAU,eAAd;AAAA,IACIC,eAAe,oBADnB;;AAGA;AACA,IAAIC,iBAAiBC,mBAASA,iBAAOC,WAAhB,GAA8BC,SAAnD;;AAEA;;;;;;;AAOA,SAASC,UAAT,CAAoBC,KAApB,EAA2B;AACzB,MAAIA,SAAS,IAAb,EAAmB;AACjB,WAAOA,UAAUF,SAAV,GAAsBJ,YAAtB,GAAqCD,OAA5C;AACD;AACD,SAAQE,kBAAkBA,kBAAkBM,OAAOD,KAAP,CAArC,GACH,yBAAUA,KAAV,CADG,GAEH,8BAAeA,KAAf,CAFJ;AAGD;;kBAEcD,U","file":"_baseGetTag.js","sourceRoot":"D:/Snnash/client-frontend","sourcesContent":["import Symbol from './_Symbol.js';\nimport getRawTag from './_getRawTag.js';\nimport objectToString from './_objectToString.js';\n\n/** `Object#toString` result references. */\nvar nullTag = '[object Null]',\n    undefinedTag = '[object Undefined]';\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n  return (symToStringTag && symToStringTag in Object(value))\n    ? getRawTag(value)\n    : objectToString(value);\n}\n\nexport default baseGetTag;\n"]}]}